
name: CI/CD Pipeline

on:
push:
branches:
  - main
pull_request:
branches:
  - main

jobs:
# User Service Job
user-service:
name: üê≥ User Service
runs-on: ubuntu-latest
steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Set up Node.js for User Service
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies for User Service
    run: npm install
    working-directory: ./user-service

  - name: Build Docker image for User Service
    run: docker build -t user-service ./user-service

  - name: Log in to Docker Hub
    run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  - name: Push User Service to Docker Hub
    run: |
      docker tag user-service ${{ secrets.DOCKER_USERNAME }}/user-service:latest
      docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

# Video Service Job
video-service:
name: üé• Video Service
runs-on: ubuntu-latest
steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Set up Node.js for Video Service
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies for Video Service
    run: npm install
    working-directory: ./video-service

  - name: Build Docker image for Video Service
    run: docker build -t video-service ./video-service

  - name: Log in to Docker Hub
    run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  - name: Push Video Service to Docker Hub
    run: |
      docker tag video-service ${{ secrets.DOCKER_USERNAME }}/video-service:latest
      docker push ${{ secrets.DOCKER_USERNAME }}/video-service:latest

# API Gateway Job
api-gateway:
name: üö™ API Gateway
runs-on: ubuntu-latest
steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Set up Node.js for API Gateway
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies for API Gateway
    run: npm install
    working-directory: ./api-gateway

  - name: Build Docker image for API Gateway
    run: docker build -t api-gateway ./api-gateway

  - name: Log in to Docker Hub
    run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  - name: Push API Gateway to Docker Hub
    run: |
      docker tag api-gateway ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
      docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

# Frontend Service Job
frontend:
name: üíª Frontend
runs-on: ubuntu-latest
steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Set up Node.js for Frontend
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies for Frontend
    run: npm install
    working-directory: ./frontend

  - name: Build Docker image for Frontend
    run: docker build -t frontend ./frontend

  - name: Log in to Docker Hub
    run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  - name: Push Frontend to Docker Hub
    run: |
      docker tag frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
      docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
